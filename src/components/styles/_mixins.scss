// Mixin for rounded corners
@mixin rounded-corners($radius: 30px) {
    border-radius: $radius;
  }
  
  // Mixin for button hover effect
  @mixin button-hover-effect {
    &:hover {
      background-color: $button-hover-bg;
    }
  }
  
  // Mixin for font settings
  @mixin font-settings($color: $text-light, $size: 16px, $weight: normal) {
    font-family: 'Geist', sans-serif;
    font-size: $size;
    font-weight: $weight;
    background: $color;  // Apply gradient as background
    -webkit-background-clip: text;  // Ensure background clip works in WebKit browsers
    color: transparent;  // Make the text color transparent so the gradient is visible
  }
  // Mixin for outline text
  @mixin outline-text($color: white, $text-shadow1: #815ac0, $size: 1rem) {
    position: relative;
    font-size: $size;
  
    &::before {
      content: attr(data-text);
      position: absolute;
      top: 0;
      left: 0;
      z-index: 0;
      width: 100%;
      height: 100%;
      color: transparent;
      text-shadow:
        -0px -0px 0 $text-shadow1,
        0px -0px 0  $text-shadow1,
        -0px  1.09px 0  $text-shadow1,
        0px  0px 0  $text-shadow1;
    }
  
    &::after {
      content: attr(data-text);
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1;
      width: 100%;
      height: 100%;
      color: $color;
    }
  }
  
  // Mixin for shiny text
 @mixin shiny-text($duration: 3s) {
  background: linear-gradient(
    45deg,
    black 52%,
    white 53%,
    #6f6fff 55%,
    #ff00c8 54%,
    white 56%,
    black 57%
  );
  background-size: 300% 300%;
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  animation: shine $duration infinite linear;
  
}

@keyframes shine {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}
  
  
  // Mixin for centering elements
  @mixin centerVH {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

  }
  // Mixin for background configuration
  @mixin bgConfig{
    background-size: cover;
    background-position: center center;
  }
// Mixin for gradient background
  @mixin gradient-background {
    background: conic-gradient(
        from 180deg at 50% 50%,
        #6a0dad 0deg,
        #ff007f 40deg,
        #ff7f00 80deg,
        #ffef00 140deg,
        #00d26a 220deg,
        #6a0dad 280deg
      ),
      radial-gradient(circle at 50% 100%, rgba(255, 255, 255, 0.1), transparent 70%);
  }
  // Mixin rainbow outlined
  @mixin rainbow-outline($size: 3px, $radius: 30px) {
    position: relative;
  
    &::after {
      content: "";
      position: absolute;
      inset: -$size; // Expands outward
      border-radius: $radius; // Smooth rounded corners
      padding: $size;
      background: linear-gradient(45deg, 
        #ff0000, #ff7300, #fffb00, #48ff00, #00ffee, #2b65ff, #8000ff, #ff0080
      );
  
      // Create the outline effect
      mask: linear-gradient(white 0 0) content-box, linear-gradient(white 0 0);
      mask-composite: exclude;
      -webkit-mask: linear-gradient(white 0 0) content-box, linear-gradient(white 0 0);
      -webkit-mask-composite: xor;
    }
  }
  // Mixin for shiny outline
  @mixin shiny-outline{
    border-radius: 30px;
    box-shadow:
    /* Inner layer with*/
    -0.25px -0.25px 0 $shadow1,
     0.25px -0.25px 0 $shadow1,
    -0.25px  0.25px 0 $shadow1,
     0.25px  0.25px 0 $shadow1,

    /* Middle layer */
    -0.25px -0.25px 0 $shadow2,
     0.25px -0.25px 0 $shadow2,
    -0.25px  0.25px 0 $shadow2,
     0.25px  0.25px 0 $shadow2,

    /* Outer layer*/
    -0.5px -0.5px 0 white,
     0.5px -0.5px 0 white,
    -0.5px  0.5px 0 white,
     0.5px  0.5px 0 white;
    
     filter: drop-shadow(0 0 5px rgba(255, 255, 255, 0.4));

}

  // Mixin for button hover effect
  @mixin hover-button($primary: $primary-color, $hover: $button-hover-bg, $text: $button-text, $radius: $border-radius, $shadow-opacity: 0.25) {
    position: relative;
    border: none;
    background: transparent;
    padding: 0;
    cursor: pointer;
    outline-offset: 4px;
    transition: filter 250ms;
  
    .shadow {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: $radius;
      background: rgba(0, 0, 0, $shadow-opacity);
      will-change: transform;
      transform: translateY(2px);
      transition: transform 600ms cubic-bezier(0.3, 0.7, 0.4, 1);
    }
  
    .edge {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: $radius;
      background: linear-gradient(
        to left,
        darken($primary, 16%) 0%,
        $primary 8%,
        $primary 92%,
        darken($primary, 16%) 100%
      );
    }
  
    .front {
      display: block;
      position: relative;
      padding: 12px 42px;
      border-radius: $radius;
      font-size: 1.25rem;
      color: $text;
      background: $hover;
      will-change: transform;
      transform: translateY(0);
      transition: transform 600ms cubic-bezier(0.3, 0.7, 0.4, 1);
    }
  
    &:hover {
      filter: brightness(110%);
    }
  
    &:hover .front {
      transform: translateY(-4px); // Moves the button up to create a "hovered" look
      transition: transform 250ms cubic-bezier(0.3, 0.7, 0.4, 1.5);
    }
  
    &:hover .shadow {
      transform: translateY(6px); // Shadows move down to add depth
      transition: transform 250ms cubic-bezier(0.3, 0.7, 0.4, 1.5);
    }
  
    &:focus:not(:focus-visible) {
      outline: none;
    }
  }
  